@model RegisterViewModel

@{
    ViewData["Registrieren"] = "Register";
}
<div id="wrapper">
    <div id="kopfbereich">
        <h2>Registrierung</h2>
    </div> <!--Ende kopfbereich-->
    <div class="row">
        <div class="col-md-4">
            <form asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post">
                <h4>Einen neuen Account erstellen</h4>
                <hr />
                @Html.ValidationSummary(true, null, new { @class="text-danger"})
                <div class="form-group">
                    @Html.LabelFor(y => y.Email)
                    @Html.TextBoxFor(y => y.Email, new { @class = "form-control", placeholder = Html.DisplayNameFor(y => y.Email) })
                    @Html.ValidationMessageFor(y => y.Email, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(y => y.Passwort)
                    @Html.PasswordFor(y => y.Passwort, new { @class = "form-control", placeholder = Html.DisplayNameFor(y => y.Passwort) })
                    @Html.ValidationMessageFor(y => y.Passwort, null, new { @class = "text-danger" })                    
                </div>
                <div class="form-group">
                    @Html.LabelFor(y => y.Passwortbestätigen)
                    @Html.PasswordFor(y => y.Passwortbestätigen, new { @class = "form-control", placeholder = Html.DisplayNameFor(y => y.Passwortbestätigen)})
                    @Html.ValidationMessageFor(y => y.Passwortbestätigen, null, new { @class = "text-danger" })                    
                </div>
                <button type="submit" class="btn btn-default">Registrieren</button>
            </form>
        </div>        
    </div>
</div>